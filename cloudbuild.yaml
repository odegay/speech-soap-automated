steps:
  # Backend: install dependencies and run tests
  - name: 'python:3.11'
    entrypoint: bash
    args:
      - -c
      - |
        pip install -r src/backend/requirements.txt
        pytest --cov=src

  # Frontend build and tests
  - name: 'node:18'
    dir: 'src/frontend'
    entrypoint: npm
    args: ['install']
  - name: 'node:18'
    dir: 'src/frontend'
    entrypoint: npm
    args: ['test']
  - name: 'node:18'
    dir: 'src/frontend'
    entrypoint: npm
    args: ['run', 'build']

  # Build backend container and push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/soap-backend:$SHORT_SHA', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/soap-backend:$SHORT_SHA']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'soap-backend'
      - '--image=gcr.io/$PROJECT_ID/soap-backend:$SHORT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--quiet'
      - '--allow-unauthenticated'

  # Deploy frontend to Firebase Hosting
  - name: 'gcr.io/cloud-builders/npm'
    dir: 'src/frontend'
    args: ['install', '-g', 'firebase-tools']
  - name: 'gcr.io/cloud-builders/firebase'
    dir: 'src/frontend'
    args: ['deploy', '--project', '$PROJECT_ID', '--only', 'hosting']
images:
  - 'gcr.io/$PROJECT_ID/soap-backend:$SHORT_SHA'
options:
  logging: CLOUD_LOGGING_ONLY
