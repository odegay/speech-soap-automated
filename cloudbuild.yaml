substitutions:
  _REGION: 'us-central1'
  _ENV: 'production'
  _SERVICE_NAME: 'soap-backend'
  _MEMORY: '512Mi'
  _CPU: '1'
  _MIN_INSTANCES: '0'
  _MAX_INSTANCES: '10'
  _PORT: '8080'

steps:
  # Set up environment variables
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        echo "Setting up environment variables..."

  # Backend: install dependencies and run tests
  - name: 'python:3.11'
    entrypoint: bash
    args:
      - -c
      - |
        export ENVIRONMENT=$_ENV
        pip install -r src/backend/requirements.txt
        pytest --cov=src

  # Frontend build and tests
  - name: 'node:18'
    id: 'npm install'
    dir: 'src/frontend'
    entrypoint: bash
    args:
      - -c
      - |
        npm ci
    env:
      - 'NPM_CONFIG_CACHE=/workspace/.npm'
  - name: 'node:18'
    dir: 'src/frontend'
    entrypoint: bash
    args:
      - -c
      - |
        CI=true npm test -- --watchAll=false --passWithNoTests
    env:
      - 'ENVIRONMENT=${_ENV}'
      - 'CI=true'
    timeout: '300s'
  - name: 'node:18'
    dir: 'src/frontend'
    entrypoint: bash
    args:
      - -c
      - |
        npm run build
    env:
      - 'ENVIRONMENT=${_ENV}'

  # Build backend container and push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image=gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--quiet'
      - '--memory=$_MEMORY'
      - '--cpu=$_CPU'
      - '--min-instances=$_MIN_INSTANCES'
      - '--max-instances=$_MAX_INSTANCES'
      - '--port=$_PORT'
      - '--allow-unauthenticated'
      - '--set-env-vars=ENVIRONMENT=$_ENV,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,CORS_ORIGINS=https://$_SERVICE_NAME-$PROJECT_ID.$_REGION.run.app'
      - '--set-secrets=OPENAI_API_KEY=speech-soap-generator-openai-token:latest'

  # Deploy frontend to Firebase Hosting
  - name: 'node:20'
    dir: 'src/frontend'
    entrypoint: bash
    args:
      - -c
      - |
        npm install -g firebase-tools
        firebase deploy --project $PROJECT_ID --only hosting

images:
  - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'
  dynamicSubstitutions: true

timeout: '1800s'
